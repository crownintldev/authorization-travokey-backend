"use strict";var t=require("@casl/ability");var n=require("@casl/ability/extra");function r(t){const n=t.conditions;return t.inverted?{$nor:[n]}:n}function e(t,e,o="read"){return n.rulesToQuery(t,o,e,r)}function o(t,n="read"){return new Proxy({t:t,o:n},i)}const c={$expr:{$eq:[0,1]}};const i={get(t,e){const o=n.rulesToQuery(t.t,t.o,e,r);return o===null?c:o}};function s(n,r,e,o){o.where(c);const i=o;if(typeof i.pre==="function")i.pre((o=>{const c=t.ForbiddenError.from(n).unlessCan(r,e);o(c)}));return o}function u(t,n,r){const o=n.detectSubjectType({constructor:t.model});if(!o)throw new TypeError(`Cannot detect subject type of "${t.model.modelName}" to return accessible records`);const c=e(n,o,r);if(c===null)return s(n,r||"read",o,t.where());return t.and([c])}function f(t,n){return u(this.where(),t,n)}function a(t,n){return u(this,t,n)}function l(t){t.query.accessibleBy=a;t.statics.accessibleBy=f}const d=t=>Object.keys(t.paths);function p(n,r){const e=r.getFields(n);if(!r||!("except"in r))return e;const o=t.wrapArray(r.except);return e.filter((t=>o.indexOf(t)===-1))}function x(){let n;return(r,e)=>{if(!n){const o=e&&"only"in e?t.wrapArray(e.only):p(r,e);n=t=>t.fields||o}return n}}function y(t,r){const e=Object.assign({getFields:d},r);const o=x();function c(r,c){return n.permittedFieldsOf(r,c||"read",this,{fieldsFrom:o(t,e)})}function i(r,c){const i={constructor:this};return n.permittedFieldsOf(r,c||"read",i,{fieldsFrom:o(t,e)})}t.statics.accessibleFieldsBy=i;t.method("accessibleFieldsBy",c)}exports.accessibleBy=o;exports.accessibleFieldsPlugin=y;exports.accessibleRecordsPlugin=l;exports.getSchemaPaths=d;exports.toMongoQuery=e;
//# sourceMappingURL=index.js.map
